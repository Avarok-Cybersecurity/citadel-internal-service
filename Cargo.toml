[workspace]

resolver = "2"
members = [
    "citadel-internal-service",
    "citadel-internal-service-types",
    "citadel-internal-service-connector",
    "citadel-internal-service-macros",
    "service",
]

exclude = [
    "./target/*"
]

[workspace.dependencies]

# Workspace deps
citadel-internal-service-types = { path = "./citadel-internal-service-types", default-features = false, version = "0.1.0" }
citadel-internal-service = { path = "./citadel-internal-service", default-features = false, version = "0.1.0" }
citadel-internal-service-connector = { path = "./citadel-internal-service-connector", default-features = false, version = "0.1.0" }
citadel-internal-service-macros = { path = "./citadel-internal-service-macros", default-features = false, version = "0.1.0" }

# Avarok deps
citadel_sdk = { git = "https://github.com/Avarok-Cybersecurity/Citadel-Protocol/", branch = "donovan/peer-info" }
citadel_types = { git = "https://github.com/Avarok-Cybersecurity/Citadel-Protocol/", branch = "donovan/peer-info" }
citadel_logging = { git = "https://github.com/Avarok-Cybersecurity/Citadel-Protocol/", branch = "donovan/peer-info" }

# Standard deps
serde = { version = "1.0.104", features = ["derive"] }
tokio = { version = "1.28.1", default-features = false }
tokio-util = { version = "0.7.8", default-features = false }
bincode2 = { version = "2.0.1", default-features = false }
futures = { version = "0.3.28", default-features = false }
bytes = { version = "1.4.0", default-features = false }
uuid = { version="1.3.3", features = [
    "v4",                # Lets you generate random UUIDs
    "fast-rng",          # Use a faster (but still sufficiently random) RNG
    "macro-diagnostics", # Enable better diagnostics for compile-time UUIDs
]}
anyhow = "1.0.71"
async-recursion = { version = "1.0.4" }
parking_lot = { version = "0.12.1" }
structopt = { version = "0.3.26" }
lazy_static = "1.4.0"